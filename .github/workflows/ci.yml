name: CI/CD Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-test-and-login-to-dockerhub:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_pass
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      TEST_DATABASE_URL: postgresql+asyncpg://test_user:test_pass@localhost:5432/test_db

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 pytest pytest-asyncio

      - name: Run flake8
        run: |
          flake8 src --max-line-length=120 --statistics

      - name: Run pytest
        run: |
          pytest tests --disable-warnings --maxfail=1

      - name: Debug secrets
        run: |
          echo "Username: ${{ secrets.DOCKER_USERNAME }}"
          echo "Password length: ${{ secrets.DOCKER_PASSWORD != '' && 'OK' || 'EMPTY' }}"


      - name: Log in to Docker Hub
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/myapp:latest .

      - name: Push Docker image
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/myapp:latest